version: '2'
services:
  nginx:
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./dist:/var/www
    ports:
      - "80:80"
    depends_on: 
      - backend
  admin:
    build:
      context: ./
      dockerfile: admin.dockerfile
    working_dir: /home/node/app
    user: "node"
    environment:
      - NODE_ENV=development
    volumes:
      - ../admin:/home/node/app
      - ./script:/home/node/app/script
      - ./dist:/home/node/app/dist
    entrypoint: ["/bin/bash", "./script/admin.sh"]
  user:
    build:
      context: ./
      dockerfile: user.dockerfile
    working_dir: /home/node/app
    user: "node"
    environment:
      - NODE_ENV=development
      - NODE_OPTIONS="--max-old-space-size=4092"
    volumes:
      - ../user:/home/node/app
      - ./script:/home/node/app/script
      - ./dist:/home/node/app/dist
    entrypoint: ["/bin/bash", "./script/user.sh"]
  backend:
    build:
      context: ./
      dockerfile: backend.dockerfile
    working_dir: /usr/src/app
    volumes:
      - ../backend:/usr/src/app
      - ./script:/usr/src/app/script
    ports:
      - "8000:8000"
    entrypoint: ["/bin/bash", "./script/backend.sh"]
    environment:
      - "DRIVER_REDIS_HOST=redis"
      - "DRIVER_DB_NAME=postgres"
      - "DRIVER_DB_HOST=postgres"
      - "DRIVER_DB_USER=postgres"
      - "DRIVER_DB_PASSWORD=postgres"
    depends_on: 
      - postgres
      - redis
  postgres:
    build:
      context: ./
      dockerfile: postgres.dockerfile
    working_dir: /home/postgres
    volumes:
      - ./script:/home/postgres/script
    environment:
      - "POSTGRES_PASSWORD=postgres"
  redis:
    image: redis
