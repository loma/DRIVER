version: '2'
services:
  nginx:
    build:
      context: ../nginx
      dockerfile: Dockerfile
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
  admin:
    build:
      context: ./
      dockerfile: admin.dockerfile
    working_dir: /home/node/app
    user: "node"
    environment:
      - NODE_ENV=development
    volumes:
      - ../admin:/home/node/app
      - ./script:/home/node/app/script
    ports:
      - "4200:4200"
    entrypoint: ["/bin/bash", "./script/admin.sh"]
  user:
    build:
      context: ./
      dockerfile: user.dockerfile
    working_dir: /home/node/app
    user: "node"
    environment:
      - NODE_ENV=development
    volumes:
      - ../user:/home/node/app
      - ./script:/home/node/app/script
    ports:
      - "4300:4300"
    entrypoint: ["/bin/bash", "./script/user.sh"]
  backend:
    build:
      context: ./
      dockerfile: backend.dockerfile
    working_dir: /usr/src/app
    volumes:
      - ../backend:/usr/src/app
    ports:
      - "8000:8000"
    entrypoint: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    environment:
      - "DRIVER_REDIS_HOST=redis"
      - "DRIVER_DB_NAME=postgres"
      - "DRIVER_DB_HOST=postgres"
      - "DRIVER_DB_USER=postgres"
      - "DRIVER_DB_PASSWORD=postgres"
    depends_on: 
      - postgres
      - redis
      - nginx
  postgres:
    build:
      context: ./
      dockerfile: postgres.dockerfile
    environment:
      - "POSTGRES_PASSWORD=postgres"
  redis:
    image: redis
